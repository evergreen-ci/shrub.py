buildvariants:
- display_name: Ubuntu 18.04
  name: ubuntu1804
  run_on:
  - ubuntu1804-small
  tasks:
  - name: unit_tests
  - name: deploy
  - name: check_pypi_version


functions:
  create virtualenv:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        /opt/mongodbtoolchain/v3/bin/python3 -m venv venv
        . venv/bin/activate
        pip install --upgrade pip

        pip install poetry
        poetry install

  deploy:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          . venv/bin/activate

          if [ "${is_patch|false}" = "true" ]; then
            # Do not deploy on patches.
            exit 0
          fi

          poetry publish --build --username ${pypi_user} --password ${pypi_password}

  check_version_update:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose
          wget -q https://github.com/dbradf/pypi-version-check/releases/download/v0.3.0/pypi-version-check
          chmod +x pypi-version-check
          ./pypi-version-check

pre:
- command: git.get_project
  params:
    directory: src
- func: create virtualenv

post:
- command: attach.xunit_results
  params:
    file: src/junit-*.xml

tasks:
- name: unit_tests
  commands:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        . venv/bin/activate

        poetry run pytest --junitxml=junit-test-output.xml

- name: deploy
  patchable: false
  depends_on:
    - name: unit_tests
  commands:
    - func: deploy

- name: check_pypi_version
  commands:
  - func: check_version_update
